# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]
    
permissions:
  contents: read

jobs:

  build_openwrt:

    permissions:
      contents: write # for release creation

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_GRUB_IMAGES=y
          CONFIG_PACKAGE_adguardhome=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_brook=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_hysteria=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          # CONFIG_PACKAGE_kmod-crypto-kpp is not set
          CONFIG_PACKAGE_kmod-ifb=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ipt-socket=y
          CONFIG_PACKAGE_kmod-nf-log6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-nf-socket=y
          CONFIG_PACKAGE_kmod-nft-core=y
          CONFIG_PACKAGE_kmod-nft-nat=y
          CONFIG_PACKAGE_kmod-nft-socket=y
          CONFIG_PACKAGE_kmod-nft-tproxy=y
          CONFIG_PACKAGE_kmod-sched-core=y
          # CONFIG_PACKAGE_kmod-wireguard is not set
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libmaxminddb=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_lua-cjson=y
          CONFIG_PACKAGE_lua-maxminddb=y
          CONFIG_PACKAGE_luasocket=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-bypass=y
          CONFIG_PACKAGE_luci-app-eqos=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall2=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Brook=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Hysteria=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_ShadowsocksR_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Rust_Client=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Rust_Server=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-passwall2_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Hysteria=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_GO=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Geodata=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-passwall_Nftables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-uugamebooster=y
          CONFIG_PACKAGE_luci-app-vssr=y
          # CONFIG_PACKAGE_luci-app-wireguard is not set
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-adguardhome-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-bypass-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-eqos-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-smartdns-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-uugamebooster-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wrtbwmon-zh-cn=y
          # CONFIG_PACKAGE_luci-proto-wireguard is not set
          CONFIG_PACKAGE_luci-theme-argonne=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_naiveproxy=y
          CONFIG_PACKAGE_netdata=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
          CONFIG_PACKAGE_shadowsocks-rust-ssserver=y
          CONFIG_PACKAGE_smartdns=y
          CONFIG_PACKAGE_tc-tiny=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_trojan-go=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_uugamebooster=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-geoip=y
          CONFIG_PACKAGE_v2ray-geosite=y
          CONFIG_PACKAGE_v2ray-plugin=y
          # CONFIG_PACKAGE_wireguard-tools is not set
          CONFIG_PACKAGE_xray-plugin=y
          CONFIG_TARGET_KERNEL_PARTSIZE=512
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
          CONFIG_VHDX_IMAGES=y
          # CONFIG_VMDK_IMAGES is not set
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
